
1) TypeError: ObjectId('527e17c538320915e9893f17') is not JSON serializable

2) bson.errors.InvalidId: 'sFgVQWMKzUiWl5dql62j2g==' is not a valid ObjectId, it must be a 12-byte input or a 24-character hex string
record = db.collection.find_one({'_id': ObjectId("sFgVQWMKzUiWl5dql62j2g==")})

3) [2020-01-05 07:14:52,933] ERROR in app: Exception on /register [POST]
web_1  | Traceback (most recent call last):
web_1  |   File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 1949, in full_dispatch_request
web_1  |     rv = self.dispatch_request()
web_1  |   File "/usr/local/lib/python3.8/site-packages/flask/app.py", line 1935, in dispatch_request
web_1  |     return self.view_functions[rule.endpoint](**req.view_args)
web_1  |   File "/usr/local/lib/python3.8/site-packages/flask_restful/__init__.py", line 458, in wrapper
web_1  |     resp = resource(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.8/site-packages/flask/views.py", line 89, in view
web_1  |     return self.dispatch_request(*args, **kwargs)
web_1  |   File "/usr/local/lib/python3.8/site-packages/flask_restful/__init__.py", line 573, in dispatch_request
web_1  |     resp = meth(*args, **kwargs)
web_1  |   File "app.py", line 99, in post
web_1  |     if UserExist(username):
web_1  |   File "app.py", line 20, in UserExist
web_1  |     count =  db.users.count_documents({"Username": username})
web_1  |   File "/usr/local/lib/python3.8/site-packages/pymongo/collection.py", line 1720, in count_documents
web_1  |     return self.__database.client._retryable_read(
web_1  |   File "/usr/local/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1453, in _retryable_read
web_1  |     server = self._select_server(
web_1  |   File "/usr/local/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1253, in _select_server
web_1  |     server = topology.select_server(server_selector)
web_1  |   File "/usr/local/lib/python3.8/site-packages/pymongo/topology.py", line 233, in select_server
web_1  |     return random.choice(self.select_servers(selector,
web_1  |   File "/usr/local/lib/python3.8/site-packages/pymongo/topology.py", line 192, in select_servers
web_1  |     server_descriptions = self._select_servers_loop(
web_1  |   File "/usr/local/lib/python3.8/site-packages/pymongo/topology.py", line 208, in _select_servers_loop
web_1  |     raise ServerSelectionTimeoutError(
web_1  | pymongo.errors.ServerSelectionTimeoutError: :27017: [Errno -2] Name or service not known
web_1  | 172.20.0.1 - - [05/Jan/2020 07:14:52] "POST /register HTTP/1.1" 500 -
from pymongo import MongoClient
MongoClient("mongodb://:27017")
class Register(Resource):
    def post(self):
        postedData = request.get_json()
        username = postedData["username"]
        password = postedData["password"]
        if UserExist(username):
            retJson = {
                "status code": 301,
                "message": "Invalid username"
            }
            return jsonify(retJson)
        hashed_pw = bcrypt.hashpw(password.encode('utf8'), bcrypt.gensalt())
        users.inser({
            "Username": username,
            "Password": hashed_pw
        })
        retJson = {
            "status code": 200,
            "message": "successfully registered"
        }
        return jsonify(retJson)
def UserExist(username):
    count =  db.users.count_documents({"Username": username})
    if count <= 0:
        return False
    else:
        return True






        MongoClient("mongodb://:27017") with MongoClient("mongodb://localhost:27017")